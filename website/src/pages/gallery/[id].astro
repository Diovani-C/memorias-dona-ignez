---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { Image } from "astro:assets";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const posts = await getCollection("images");
  return posts.map((image) => ({
    params: { id: image.id },
    props: { image },
  }));
}

const { image } = Astro.props;

const pageTitle = `Visualizar: `;
---

<BaseLayout title={pageTitle}>
  <div class="container mx-auto max-w-5xl px-4 py-8">
    <a
      href="/gallery"
      class="inline-flex items-center gap-2 text-sm font-semibold transition-colors mb-8"
      style="color: var(--color-text);"
      aria-label="Voltar para a galeria"
      data-astro-prefetch
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="20"
        height="20"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="lucide lucide-arrow-left"
      >
        <path d="m12 19-7-7 7-7"></path>
        <path d="M19 12H5"></path>
      </svg>
      Voltar para a galeria
    </a>

    <!-- Visualizador da Imagem -->
    <div
      class="w-full max-w-5xl max-h-[80vh] p-2 sm:p-4 bg-white rounded-xl shadow-lg grid place-items-center mx-auto"
      style="border: 1px solid var(--color-sepia-light);"
    >
      <Image
        transition:name={image.id}
        src={image.data.src}
        alt={image.data.alt}
        class="object-contain max-w-full max-h-full min-h-0 rounded-lg"
      />
    </div>

      <div
        class="flex items-center justify-center gap-3 mt-8 flex-shrink-0 w-full md:w-auto"
      >
        <a
          href={image.data.src.src}
          download
          class="action-button"
          aria-label="Baixar imagem"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="lucide lucide-download"
          >
            <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
            <polyline points="7 10 12 15 17 10"></polyline>
            <line x1="12" x2="12" y1="15" y2="3"></line>
          </svg>
          <span class="hidden sm:inline">Baixar</span>
        </a>

        <button id="share-btn" class="action-button" aria-label="Compartilhar imagem">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="lucide lucide-share-2"
          >
            <circle cx="18" cy="5" r="3"></circle>
            <circle cx="6" cy="12" r="3"></circle>
            <circle cx="18" cy="19" r="3"></circle>
            <line x1="8.59" x2="15.42" y1="13.51" y2="17.49"></line>
            <line x1="15.41" x2="8.59" y1="6.51" y2="10.49"></line>
          </svg>
          <span class="hidden sm:inline">Compartilhar</span>
        </button>
    </div>
  </div>
  <!-- Estilos para os botões -->
  <style>
    .action-button {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      gap: 0.5rem; /* 8px */
      font-weight: 600;
      padding: 0.75rem 1.5rem; /* 12px 24px */
      border-radius: 0.375rem; /* 6px */
      background-color: var(--color-gold-pale);
      color: var(--color-cream);
      transition: all 0.2s ease-in-out;
      border: 1px solid transparent;
    }
    .action-button:hover {
      opacity: 0.9;
      transform: translateY(-2px);
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }
    a[aria-label="Voltar para a galeria"]:hover {
      color: var(--color-gold-pale);
    }
  </style>

  <!-- Script para funcionalidade de compartilhar -->
  <script define:vars={{ image }}>
    const shareButton = document.getElementById("share-btn");

    if (shareButton) {
      shareButton.addEventListener("click", async () => {
        const shareData = {
          description: image.data.alt,
          url: window.location.href,
        };

        if (navigator.share && navigator.canShare(shareData)) {
          try {
            await navigator.share(shareData);
            console.log("Imagem compartilhada com sucesso!");
          } catch (err) {
            console.error("Erro ao compartilhar:", err);
          }
        } else {
          // Fallback para desktops ou navegadores sem suporte
          try {
            await navigator.clipboard.writeText(window.location.href);
            alert("Link da imagem copiado para a área de transferência!");
          } catch (err) {
            console.error("Falha ao copiar o link:", err);
            alert("Não foi possível copiar o link. Tente manualmente.");
          }
        }
      });
    }
  </script>
</BaseLayout>
